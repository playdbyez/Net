##########################  
#   RECENTLY USED FILES  #
##########################

USE < BleachBit > Software for cleansing "log files" like .xml

~/.local/share/recently-used.xbel/
//gedit,nautilus,etc..


##########################  
#   Lib Locations        #
##########################
$ /usr/include/X11


##################################################################################


$ lscpu > tmp/text.txt

$ lsusb > tmp/text.txt

$ lsusb -v -s <bus# : devic#> > tmp/text.txt
//note unique id 'iserial'

$ lspci > tmp/text.txt

$ lspci -vvv > tmp/text.txt
//used to create drivers

$ lsblk -S 
//show scsi devices, HD

$ cat proc/cpuinfo
$ cat proc/meminfo
$ cat proc/scsi
$ cat proc/partitions
$ cat proc/mdstat
//raid device configs

$ file <fileName>
// Display info on a file including shasum

$ mount
//Lists all mounted volumes

$ blkid
//Lists UUID of devices

$ ps-ax
// Show active processes

$ free
//Memory

$ shred -u
// Securely randomize data prior to deletion 

$ shasum
//Used for calculating a checksum of a file
//In order to check for discrepancies against the checksum provided by source


$ less /lib/systemd/system/nginx.service
// Info of a service's options, Start,Stop,Reload,StartPre for systemctl
// Where source code gets altd

$ systemctl kill <processName>
// sends an exec=Exit to processName

$ sudo systemctl status <processName>
//Displays process id and memory usage as well as child/parent processes
//To manage the state of units
//ProcessName could be 'httpd' or .service
//Sysctl STATUS: >Inactive,Active,Failed,Static,Bad,Masked,Inderect,Linked

$ systemctl enable <serviceName>
//Enabling/Disabling services at boot
//Executing = source of command
//Symlink = where systemd requests the repositioning of file /lib/nt.service in target.wants designated dir

$ systemctl start <serviceName>
//starts a service unit from systemd 

$ systemctl stop $UNIT
//stops a service unit from systemd

$ systemctl restart $UNIT
//restarts a service unit from systemd

$ sudo systemctl list-unit-files | grep enabled
//This will show what services are enabled to start as soon as the computer boots.

$ systemctl -list-unit-files
// list all systemd units

$ systemctl -list-units --type=service
// list systemd units by service and activity 


$ (inside terminal, Press: Ctrl+R)
//Search tool

$ (inside terminal, Press: Ctrl+X + E)
//opens an editor that will execute upon save/exit

$ sleep 12
Ctrl + D
[1]+  Stopped  sleep 12
$ bg
//After stopping, restart previous command but run it in the background

$ lsmod
//checks for modules

$ tail var/log/sys.log
//Checks module outputs


$ df -h
// Displays device name, total blocks, total disk space, 
// used disk space, available disk space, and mount points on a file system.
//use% = disk usage being used by /w capabilities

$ df -h .
//Displays memory available in current dir


$ systemd-analyze plot
$ systemd-analyze blame
$ systemd-analyze dump
//Analyse Boot with exec times



$ last
//Enables last binnary file to be converted to simple text  
()

$ !! a
//repeats last command starting with 'a'

$ sudo !!
//repeats the last command but with sudo priviledges

$ sudo find / -name *.pdf
//finds all pdf files

$ du -sh file 
//Displays filesize

$ ls -l path-to-file
//displays path to file with ls 

$ ls -lh filename
//shows file info with ls

$ ls -laX
//Alphabetic sorting, color coded, output

$ dmesg
//Check for physical ports active and inactive

$ sudo blkid
//Block Storage devices

$ sudo lsblk
//Block Storage devices

$ usb-devices
//List all usb
//Note: Vendor, ProdID,Product and the DeviceID (parenthesis)

$ lsusb
//Displays DeviceID of connected usb
$ stat file_name
//shows file info with stat

$ which ls
//finds command location

$ whatis ls
//Prints command name

$ cat file.txt | wc
//Word count of file.txt

$ ls -alh
//command location

$ ls /var | wc -l
//Line count of output of ls

$ sudo ss -p -e
$ sudo ss -tulpn
//Scan Sockets and show Processes in extended format

$ lsof -i -P -n
//List Open Files

$ sudo lsof -i :80
//list open files using port 80

$ sudo lsof -i tcp
//list open files using tcp protocol

$ sudo lsof -u <UserName>
//Which files an UserName has open

$ sudo lsof -p 1192 | grep .log
//list logging files associated with ProcessId

$ sudo lsof var/log/nginx/access.log
//list files associated with FileName w/r capabilities or both u/

$ sudo lsof -c <ProcessName>
//Sort through lsof with  specific name


$ ps -p $(pidof <processName>)
//Show all processes associated

$ ps -p <processNumb> -o etime
//Shows how long the process has been running since boot

$ ps --forst -C <processName> -o pid.ppid,cmd
//Shows a process's hierarchy (childs)

$ ps <processName> pid,vsize,rss,%cpu --sort=-rss | less
//Display virtual memory size, resident memory size, cpu consumption 
//While sorting by descending Resident Set Size

$ cat /run/processName.pid
//Location of PID number assignment by name

$ cat etc/services
//Displays list of assigned ports

$ cat etc/os-release
//display OS verison

$ sudo tail -f auth.log
//Enables Follow mode on the tail command 

$ lsb_release -a
//display Ubuntu  Version

nmcli dev show eth0
//

nmcli dev list iface eth0 | grep IP4
//finds IP of Ethernet port

ipconfig
//Old IP checker command

ifconfig
//finds IP and Mask

ip a
//

ip route
//Finds ALL default getaway IP info and route

ip -o -4 addr
//Finds IPv4

curl ifconfig.me
//TERMUX ifconfig

//Steganography

$ _echo 'hi'
// by adding a space before command it will not  be saved to history

ip -o -f inet addr show | awk '/scope global/{print $2,$4,$6}'
//Returns 3 values
//Network interface name
//IP address for said interface followed by subnet mask (/24)
//The broadcast IP address for that interface's subnet



$ ssh -L 3337:127.0.0.1:6379 root@emkc.org -N
//
CTRL + D
$ bg
$ redis-cli -p 3337
// Tunnel ssh from my Local port 3337 -> remote host's loopback port emkc.org on port 6379
// Run on background
// Connect to redis instance


$ mkdir -p folder/{sub1,sub2}/{sub1,sub2,sub3}
$ mkdir -p folder/{1..100}/{1..100}
//Creates parents to child ratio of folders
//sub 1 = sub1 + sub2 + sub3
//1 = 1+2+3+4... 99


$ cat file | tee -a log | cat > dev/null
// tee will apphend the previous pipes to a file is used with argument -a

$ disown -a && exit
// exiting terminal but leaving processess running (NoHangupSignal)

$ ps -aux | greep <sleep>
