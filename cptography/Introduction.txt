Cryptography 2010
by Christof Paar


//Kerckhuff's Principle [ 1883 ]
"A crypto system should be secure even if an attacker knows of the details about the system,
with the exception of the secret key"
This passage remarks that a sharing keys requires lots of nuance and creative methods.
There is no mathematical proof that any cryptographic algorithm is 100% secure.
Only the duration of how many years a given crypto-algorithm has remained unbroken can be ascertained.
Algorithms should be released public but not the key.

-        Cryptology          -
Although Security is a bigger concept that encompasses cryptology,
Security cannot be achieved only by cryptology 
but with standardized algorithms, cipher-text, encrypt/decrypt keys

<> Cryptography
Building a secure algorithm.
> Symmetric Algorithms
> Asymmetric Algorithms
> Protocols
> Keyspace

<> Cryptanalysis
Deconstructing a secure algorithm.
> Classical == Looking at the cipher as a blakbox, we an only infer and observe input and output with the help of a bruteforce vector, for example.
> Analytical == Inspecting the cipher's schematic, for example, letter frequencies are maintained


<> Weaknessess
> BruteForce
> Exhaustive KeySearch



############::KeySearch::############## 
Within symmetric ciphers we consider its size in bits.
and apply the FPGA based,cryptanalitical algorithm 'Copacobana'  (1 week)

I.E.
cipher key size = 64b its
solution = 2^64 bits
roughly = 2^88

If the key manages a lookup table, we compare its character to 
its possibility of being said character from the alphabet (26 letters) granting us a 26! factorial.
cipher[0] = 1 out of 26 letters of the alphabet
cipher[1] = 1 out of 25 letters of the alphabet
cipher[2] = 1 out of 24 letters of the alphabet ...
Copacabana's max keysearch = 2^56


############::Letter Frequency Analysis ::##############

//Substitution Cipher
Operates on latters and its aimed at replacing every letter by a fixed ciphertext letter.

//0Bruteforce
E > T > A > I > O > N > S > H > R > D > L > U > C > M > F > Y > W > G > P > B > V > K > X > Q > J > Z

>Letters have different frequencies in english
>The frequency of plaintext letters  is preserved  in ciphertext
>Almost 13% of all letters in a string is the letter 'E' ==  every 7th or 8th letter is an E
>About 9% of all letters in a string is the letter 'T'

############::Implementation Attacks ::##############
A Side channel attack would consist of employing an osciloscope against a microprocessor's pins
and recording the ondulation  or observe  the timing behaviour in hope to decode the key being used within the chip.




########################### :: Randomness :: #########################################


//When implementing any sort of encryption along a channel 
            its necessary to first determine randomness of the cypher key between both end-points

<>Random Number Generator

> True random number generator (TRNG)
True random numbers stem from random physical processes.
(coin-flip)

>

>




::::::::::::::::::

//Exercise 2:
Compute the following:
13 x 16 - 8


########################### :: L3 :: #########################################

[] Stream Cipher []
This cipher takes a stream of bits and encrypts them individually (bit-by-bit)

### Formula ###
Formula Index :
i = increasing variable (i++)
Y1, Y2, Y3, ... = bits
X1, X2, X3 ... = plaintext letters a,b,c, ...
S1, S2, S3 ... = crypto key
e(...)         = Encrypts on ...
d(...)         = Decrypts on ...

> Stream Encryption Operation <
[ Yi = e(Xi) = Xi + Si mod2 ] 

> Stream Decryption Operation <
[ Xi = d(Yi) = Yi + Si mod2 ]

// Why is decryption formula using addition ?
Mod2 addition and subtraction are the same.
Mod2 addition is the same as XOR operation

.Example of removing 2Si
Yi + Si mod2 
= (Yi + Si) +Si mod2  
= Yi + 2Si mod2 
= Yi Mod2 

.Mod2 | XOR  Truth table 
Xi   +   Si  =   Yi
0        0        0
0        1        1
1        0        1
1        1        0
This table proves that encryption rate of bits are 50% variable 
since a plain text zero has 50% of chance of being 1 or 0 when the key is applied. 




Where do we get the key (Si) ?



Used in GSM when encrypting calls into a relay


// Block Cipher


########################'############# # RESOURCES # ###########'############################

www.decode.fr
// Cipher database

www.icyberchef.com
//Decoding algorithms

www.steghide.sourceforge.net
//Review data within jpeg,bmp,au,wav files

www.neatnik.net/steganographr
//Online revealer for zero-width spacing technique
//Stegno converts text to bin and convert bin into a string of zero width chars
// Insert string text that may have non-displayed characters 
// Press d3steganogr4phize

www.stylesuxx.github.io
//image decoder

//Base64 encoding
//alphanumeric string ends with one or two assignment operator

www.openssl.org/docs/
//SSL Documentation

################################################################################################
