Cryptography 2010
by Christof Paar


Kerckhuff's Principle [ 1883 ]
"A crypto system should be secure even if an attacker knows of the details about the system, with the exception of the secret key"


Cryptography is used to protect data both inside and outside a computer system
Cryptography relies on an algorithm and a key
Communicating parties rely upon both having the same algorithm for decryption or each party having different algorithms that are designed to work together

Cryptography can be integrated in circuits, add-on boards or adapters, and in stand-alone units.
Cryptography is typically implemented in a module of software, firmware, hardware or a combination

[] Cryptography does not protect files from being tampered but can detect if they were infact modified.
[] Parity bits can be used to detect if a documents has been tempered
[] Tamper resistance is usually considered better in hardware

[] Sharing keys requires lots of nuance and creative methods.
[] Algorithms should be publicly released for scrutiny of its security.
[] Crypto-algorithms are judged by how long they have remained unbroken.
[] Although unconditionally secure systems cannot be broken even with infinite computing power, there is no mathematical proof that any cryptographic algorithm is 100% secure.
[] Expect a cryptosystem to be eventually broken, either through computing improvements or an algorithmic breakthrough.





############:: Cryptology ::############
Although Security is a bigger concept that encompasses cryptology,
Security cannot be achieved only by cryptology 
but with standardized algorithms, cipher-text, encrypt/decrypt keys

[] Cryptography
Building a secure algorithm.
Complexity theory + Information theory

> Symmetric Algorithms
> Asymmetric Algorithms
> Protocols
> Keyspace

[] Cryptanalysis
Deconstructing a secure algorithm.
> Classical == Looking at the cipher as a blackbox, we an only infer and observe input and output with the help of a bruteforce vector, for example.
> Analytical == Inspecting the cipher's schematic, for example, letter frequencies are maintained


[] Weaknessess
> BruteForce
> Exhaustive KeySearch

############::Cryptographic Protocols::############## 

[1] Mutually trusting parties
These types of protocols infer that both parties have the same security goals,
they also assume that an adversary is external to the protocol.
- Encryption
- Hash functions
- MACs
- Digital Signatures

[2] Mutually untrusting parties
These assume that the parties involved have conflicting/different security goals
The adversaies are parties within  the protocol.
- Commitment Schemes
- Oblivious Transfer


############ primitives ##########
Ciphers           [Symmetric primitive]
MACs              [Symmetric primitive]
Public Key        [Public key primitive]
Digital Signature [Public key primitive]
Hash Function     [Keyless primitive]

[] Private Key Systems []
Disclosure of the key would reduce or eliminate the comunication's security


[] Public Key Systems []
Public key is made available
Private key is known only to its owner
Anyone can send a message but only the owner may decrypt it.
Effetive for mutually untrusting parties.




Keysearch on an FPGA based,cryptanalitical algorithm 'Copacobana' key searches can take up to 1 week
Copacabana's max keysearch = 2^56








########################### :: Randomness :: #########################################


When implementing any sort of encryption along a channel, 
its necessary to first determine randomness of the cypher key between both end-points

<>Random Number Generator

> True random number generator (TRNG)
True random numbers stem from random physical processes.
(coin-flip)

>

>




::::::::::::::::::

//Exercise 2:
Compute the following:
13 x 16 - 8


########################### :: L3 :: #########################################



// Block Cipher


########################'############# # RESOURCES # ###########'############################

