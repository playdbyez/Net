
[] Symmetric Ciphering []


.Encryption  
m = plainText.priv  
e = function.pub  
k = key.priv  
c = cipherText.pub  
 
c = e^k(m)  


.Decryption  
c = cipherText   
e = function  
k = key  
m = plainText   
 
m = d^k(c)  



> Ciphering is a means of turning plaintext into ciphertext under the 
  control of a key.  

> Within a symmetric scheme we considering the cipher's size in bits and 
  the key must be known by both communicating parties only.
  Sometimes two keys are employed, one for encryption and another for decryption.

> Secrecy of the mesage depends on the secrecy of the key, thus they must change
  on a per message or per session basis.

> The simplest and hence fastest computational operation is ⊕.

> Security of the cipher depends on 
  1. how hard it is to perfrom an exhaustive key search against it.  
  2. how well hidden is the underlying statistics of the language used.  

> Since it is possible to turn one plaintext into two ciphers or more, the ammount of ciphers present must be bigger or  equal to the mount of plaintext characters,and because it is possible to have used a different key per character, the key length must be bigger or equal to the ammount of cipher characters. 

> A typical approach is to first us a public key scheme to determine session keys/ message keys
  then encrypt communication via either a stream or block cipher.

> When implementing any sort of encryption along a channel, its necessary to 
  first determine randomness of the cypher key between both end-points.

> A bulk cipher is a speed oriented cipher of the symmetric variety, namely stream ciphers and block ciphers.
  


[] Cryptosystem Design Goals [] 
> Encryption and decryption functions should be public in order to ascertain that they are provably secure.
> Computationally secure against ehxaustive key search.
> Compromising some secrecy for efficiency since these are used for bulk encryption.
> Reusable keys and short keys for long messages.
> Ciphers should implement detection and recovery mechanisms against replay attacks.
> Attackers are assumed to know some plain/cipher pairs associated with the key.


############ ATK MODEL #######################
Designed to specify the type of acess the attacker has to a system.
The more access the easier to reverse engineer the system.
Said system is assumed by the cipher message intercepted over an insecure communication channel.


[] TYPES OF ATTACKS
   - Passive Attack
           >> Aimed at either recovering the key or decrypting parts of the message
           >> Only allowed to listen to encrypted transmissions (traffic analysis)
           >> Easier to mount

   - Active Attack
           >> Allowed to insert and delete messages or replay them (insertion attack)
           >> Easily detectable



>> Ciphertext-Only Attack (COA)
[] The attacker has only the cipher
[] Weakest attack
[] Most common in real scenarios
[] Requires previous knowledge of language, standard protocol data or framing of the plaintext.

>>>> Brute Force / Extensive Key Search (COA)
[] Attempting the entire keyspace.
[] Depends only on the keyLength presumed.
[] Every cipher is vulnerable to it except one-time pad.



>> Known Plaintext Attack (KPA)
[] The attacker has a number of plain and cipher pairs.
[] Acquiring the plaintext can range from reapropriation of it by force to forcing words into the communication.
[] Effective against shift/mono-substitution cipher.
[] One-time pad is immune.
[] Includes cribb dragging attack.


>> Chosen Plaintext Attack (CPA)
[] The attacker obtains a cipher equivalent of his own message.
[] A sequence of messages is encrypted all simultaneously.
[] Effective against Public-key systems.


>> Chosen Ciphertext Attack (CCA)
[] The attacker uses ciphertext to have its decrypted output.
[] Requires access to the communication channel and recipient.


>> Side Channel Attacks
[] Other aspects are tied to the encryption process.
[] Aspects include power consumption, timing or radiation.
[] Other aspects include an osciloscope against a microprocessor's pins
   to record the ondulations or observe  the timing behaviour in hope to decode the key being used within the chip. 


>> Replay Attacks
[] Retransmission of captured data to generate behaviour in the system or gain access.
[] Relies on making the recipient accept duplicates due to weak distinguishing mechanisms.
[] To mitigate it, time-stamps or message sequencing are used.


>> Open Key Model Attack
[] The attacker has some knowledge of the key.


>> Key and Algorithm Attack
[] The key is the target via public knownledge of the algorithm



>> Insertion Attack



  

############  Ciphertext Only Attacks ######

- Sinkov
When facing substitution ciphers, it is important to be able to distinguish natural language from noise. 
For said purpose we can compute the Sinkov Statistic through the following:
 
for i = A ... Z
Set F[i] = underlying language frequency
Set n[i] = ciphertext frequency
S = likelyhood that said text is an extract from a natural language
 
S = ᵢ₌ₐΣᶻ n[i] x F[i]


############::Brute Search::##############   
cipher key size = 64bits  
solution = 2^64 bits  
roughly = 2^88  
If the key manages a lookup table, we compare its character to  
its possibility of being said character from the alphabet (26 letters) granting us a 26! factorial.  
cipher[0] = 1 out of 26 letters of the alphabet  
cipher[1] = 1 out of 25 letters of the alphabet  
cipher[2] = 1 out of 24 letters of the alphabet ...  




########### Chosen Ciphertext Attacks ####
If the same key is used repeatedly, it can reveal a relationship between messages.
  Suppose Eve intercepts two messages:
    c1 = m1 ⊕ k 
    c2 = m2 ⊕ k 
  A relationship between m1 and m2 can be determined via:
    c1 ⊕ c2 = (m1 ⊕ k ) ⊕ (m2 ⊕ k) = m1 ⊕ m2

