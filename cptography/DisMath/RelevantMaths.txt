
                      -Discrete Math
-Structures with a finite number of elements
(Boolean algebra, Set theory, Combinatronics)

-Continuous Math
Real numbers and approximations
( Geometry, Calculous)






                                                        BOOLEAN ALGEBRA
  uses AND , NOT, OR 
      Can be represented through Venn diagrams or truth tables



                                                        NUMERAL SYSTEMS
According to the IEEE 754 format, instead of the human tendency to use the Common Algorithm, Base10 to represent a value through decimal
                      (452 = 4x100 5x10 2x1)
  

computers generally work with  the Binary Logarithm, Base2 to represent number values through binary

Base2
【0】 【1】 【1】 【1】 【1】 【0】 【1】 【1】  
x128  x64   x32   x16   x8   x4    x2    x1

Base16 (Hexadecimal)
  0123456789abcdef

Base32 ()
  ABCDEFGHIKLMNOPQRSTVXYZabcdefghijklmnopqrstuvwxyz0123456789+/


FLOATING POINT NUMBERS
  its more precise to use scientific notation when using floats
                              5.91x10⁻⁹      ==     0.00000000591
                      Scientific Notation            Real Number


32bits = Single precision
64bits = Double precision

【1】      | 【0】 【1】 【1】 【1】 【1】  |     【1】 【0】 【1】 【0】 【0】 【0】 【0】 【0】 【0】 【0】
sign                 exponent                                    significant fraction




:::::::::::::::::::::::::: :: Modular Arithmetic :: ::::::::::::::::::::::::::::

IDEA: computation in finite sets based in arithmetic rules
kind of like arranging a formula into a 'circle' 


I.E : "Now is 12AM andwe will meet in 20 hrs" 
resulting in an absolute value of "we will meet at hours 32"
resulting in an algebraic value based on modulus-24 value of "we will meet at 8AM the next day"

[] Particular to public key cryptosystems.
 
[] When used within cryptography the modulus parameter is always positive and returns
   the smallest non-negative value equal to the argument to modulo N.
 
[]  Values a and b are "congruent modulo N" if, 
    within said equation modulus N divides b-a
	a = b (mod N)




                                                    MODULUS OPERATOR
x % y = x - (x/y) *y

5 % 2        = 
5 - (5/2) *2 = 
5 - 2 * 2    =
5 - 4        = 1


                                                        CATALAN NUMBERS [25] 

1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862,
16796, 58786, 208012, 742900, 2674440, 9694845, 
35357670, 129644790, 477638700, 1767263190,



                                                        PRIME NUMBERS [25] 
2, 3, 5, 7, 11, 13, 17, 19, 23, 29,
31, 37, 41, 43, 47, 53, 59, 61, 67, 71,
73, 79, 83, 89, 97



                                                        CARMICHAEL NUMBERS [3]

561, 1105, 1729, ...

[] false primes
[] always odd
[] always has at least 3 factors that are prime
[] always square free
[] if p divides a Carmichael N then p-1 divides N-1



                                                        GRATEST COMMON DIVISOR [25] 

gcd(x,y) 
 
[ gcd-preserving mappings ]
	>Easiest & less computationally efficient method is similar to example 2:
								(a,b) -> (a mod(b), b)
 
	> Hardest & computationally quicker: 
								(a,b) -> ((a-b)/2, b) -> if a and b are both odd
								(a,b) -> ((a/2), b)   -> if a is even
								(a,b) -> (a, (b/2))   -> if b is even
 
 
 
 
Example 1.
gcd (4,6)
		4 = 2x2
		6 = 2x3
Hence the greates multiplication factor in common between 4 and 6 is 2
 
Example 2.
gcd (21,12)
		=(21 mod(12), 12)
		=(9,12)
		=(12 mod(9), 9)
		=(3, 9)
		=(9 mod(3), 3)
		=(0, 3)
		= 3
Hence the gratest common devisor of 21 and 12 is 3
 




                                                    LOGRITHMIC FUNCTIONS

Definition : 
The inverse of exponentiation.
The Answer (3), logarithm of a number x (1000) to the base b (log10) is 
equal to the exponent (3) that raises the base b (log10).
Expo. 10^3         = 1000
Log.  log10(1000)  = 3


Generally used in Binary Search,  by considering a Wooden Log of 16 feet 
We  can half its length until the minimal value of 2 feet
      (16ft) - > (8ft) - > (4ft) - > (2ft)
                      If we know, how many times we cut the log (exponent) we can perform Exponentitation
                          to calculate the original length of the wooden log
                                            (2 ^ammount cuts) - > (2⁴)

                      If we know the original length of the log we can perform Logarithm
                            to calculate the exponent of the wooden log
                                            (log₂ (Origian Length)) - > (log₂ (16))





// Example Exercise
[ Find the value of R ]
if
            int A, R ,M ∈Z
            m > 0

Then
            A ≡ R (mod M)
            meaning M devides A - R 
            [ M|(A-R) ]
            R = Remainder of modulus
            M = Modulus
            Solution = solve A-R and relate it to M after

//Exercise 1:
A = 13
M = 9
R = ?
13 = ? x 9

How often does the modulus 9 fit into A? (quotient)
Result is once == 13/9 = 1.444
                        13-9 = 4
Remainder is  4
Solution is             13 ≡ 4 (mod 9)




//Answer Check:
13-4 = 9
(A - R = ?)

is the solution divisible by the remainder ?
Yes 9 is divisible by 9

/The value of R/remainder can fluctuate since it is not unique 
/The above mentioned is dependent on what value is given to R as a divisor used on A 
/Always perform the Answer Check after the calculation


>>Equivalence Classes:
                        [ All members of the class behave equivalent modulo 9 ]


Given mod 9, define its set :
include all natural numbers forming an 'equivalence class' modulo 9
    (+9   +9  +9   +9  +9  +9)

... -19   -9   0   9   20  27 ... SET A
... -18   -8   1   10  19  28 ... SET B
... -17   -7   2   11  20  29 ... SET C
... -16   -6   3   12  21  30 ... SET D
... -14   -5   4   13  22  31 ... SET E
... -13   -4   5   14  23  32 ... SET F
... -12   -3   6   15  24  33 ... SET G
... -11   -2   7   16  25  34 ... SET H
... -10   -1   8   17  26  35 ... SET I
//Every set is infinite in size with the remainder of modulus as the centre value






                                                    COMBINATORICS


##################################:: Catalan Numbers ::#######################################
These are definied within the combinatorics branch of discrete mathematics through the use of algebraic expressions.
Directedly tied to permutations of certain kinds.

The catalan numbers are essentially a method of narrowing the ammount of permutations through a sequence of combined factors.
Thus this sequence is applied to the length of the set involved such that: 
a set of order 0 has 1 permutation 
a set of order 1 has 1 permutation
a set of order 2 has 2 permutations
a set of order 3 has 5 permutations ...


######## FORMULA #########
Catalan number = Cn
Cn = (2n)! / ((n + 1)! n!)


######## EXAMPLE #########
n = 7
C7 = 2x7!  / (7+1)! 7!
C7 = 14!    / 8!  7!
(n+1 section gets ignored & from 1 to the result of n+1 gets ignored in the 2xn section before the division)
( 8! gets canceled out & on the 14! section values from 1 to 8 gets canceled out )
C7 = 14x13x12x11x10x9 / 1x2x3x4x5x6x7 
C7 = 2162160 / 5040
C7 = 429
Cn = Catalan[7]


############## CATALAN NUMBERS CAN BE FOUND IN: #################

[] Factorials + StackSort
(from a set of size n, there are n! permutations. Hence a set of order n has catalan[n] permutations that are stack sortable)
( Factorial : n! = 1 x 2 x 3 x 4 x ... n )
( StackSort : M = biggest value // a = values to the left of M // b = values to the right of M
              Ma = largest value to the left of M // Mb = largest value to the right of M
              if Mb < Ma then the list is not stack sortable  )


[] Dyck Paths & Dyck Words
...

[] Binary Trees
(a tree of size/order n has catalan[n] different possible shapes)

[] Pascal's Triangle
...

[] Optimal Paths
( Point (0,0) to point (n,n) withouth crossing the diagonal drawn inbetween the start to end (fastes route),

[] Parenthesis Positions
...





                                                    GRAPH THEORY



