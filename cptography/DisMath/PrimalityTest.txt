

############ Primality Testing Methods ################


### [] Sieve of Eratosthene [] ###

[] Determines the primes within a set of size N
[] N being the unknown number
[] F being all values included from 2 to N


Set F;
int j = 0;
for (i = 2 ; i < N; i++)
{
  F[j] = i;
  j++;
}

Then for each element within F,
all its divisors get eliminated from the list
until all remaining values within the set are prime

N = 15
F[13] = {2,3,4,5,6,7,8,9,10,11,12,13,14,15}

for (i = 0 ; i < N; i++)
{  for (j = 0 ; j < N; j++)
    {
      if (F[j] / F[i] != a fractional value ) 
      {  if (j != i){delete F[i]} }
    }
}


#################################################################

### [] Trial Division [] ###

[] Determines if N is prime or composite
[] N being a random number
[] First Check if N is even through dividing it by 2
[] If a divisor is found from 3 to √N then N is composite
[] Only consider odd, divisors
[] Does not produce a certificate of primality for N even when N turns out to be prime.


N = 49
if (N / 2 == even) {N is composite}
for ( i = 3 ; i < sqrt(N); i++)
{
  if (i != even)
    {  if (N / i != a fractional value) 
          { N is composite }
    }
}
else {N is prime}


#################################################################

## [] Prime Number Theorem [] ##
 
[] This function accounts for how many primes less than X
[] The output is an accurate estimate only
[] Values become more precise as the values become bigger and approach infinity. 
 
[] Natural Logarithm
   The output is the natural log of X based on the formula.
      ln(X) == logₑ(X) == log(X)
   where the natural log e = 2.718281828459
   Hence, ln(X) can be calculated by using e as the base powered to some factor Y, until the output is equal to X.


[] Density 
   The density of primes within the range of X 
   will hint at the probability that X is itself a prime.
   Z = 1/ln(X) 
 
[] Prime Number Theorem
   By employing the use of both functions above we 
   are able to infer on the amount of primes less than X.
  π(X) = X / ln (X)
 
[ ] Example [ ]
   After considering an unknown value x of 1024 bits in length we can estimate its probability of being prime.
   1. convert bit length to decimal:
   1024 bits = 2¹⁰²⁴ decimal
   2¹⁰²⁴ == 1.7976931e+308
 
   x <= 2¹⁰²⁴
 
  2. Natural logarithm of x:
    since e⁷⁰⁹ = 1.7976931e+308
    then ln(2¹⁰²⁴) = 709.7827128739912
 
  3. Density   
    1 / 709 = 0.14%
    This result indicates that the chance that x is a prime is about 0.1%
 
    709 / 2 = 354
    So on average we'd have to select 354 incorrect odd values of equal
    or lower decimal value to 2¹⁰²⁴ until we find a value that is prime.
    Thus, the average chance of hitting a prime out of 709 is 354.

##############################################################################################



### [] Fermat's Test for Primality [] ###
 
[] This algorithm builds upon Lagrange's Theorem and Fermat's Little Theorem to verify n for primality.
[] More advanced probabilistic algorithm.
[] Formula is computationally fast.
[] Can only measure that n is composite.
[] This verions of the test is avoided due to finding no witness for compositeness against actual composite values.
 
n = 43040357
Set S[]  = {2, 3, .., n-1 }
L = #S
 
for (i = 0; i < L; i++)
{
 a = S[i];
 b = 0;
 b = aⁿ⁻¹ (mod n)
		if (b == 1) {printf("%d is a pseudo-prime to base %d\n", n, a);}
		if (b == 1) {printf("%d is a composite with probability of %d\n", 1/2ᴸ);}
 
		if (b != 1) {printf("%d is a composite given the witness %d\n", n, a);}
}
 
 
 
FORMULA LOGIC
> Lagrange's Theorem
	if G is a multiplicative group and #G is the group size
	then a^#G = 1 for all values a ∈ G
	and if G is a "group under modulo n multiplication"
	then a^φ(n) = 1 (mod n) for all a ∈ ℤₙ
Thus given value n, if n is prime the formula always holds but it might
also hold if n is some specific composite called the " Carmichael Numbers".
 
> Carmichael Numbers [false primes]
[561, 1105, 1729, ...]
	[] always odd
	[] always has at least 3 factors that are prime
	[] always square free
	[] if p divides a Carmichael N then p-1 divides N-1
 
#########################################################################
